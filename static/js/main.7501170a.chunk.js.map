{"version":3,"sources":["components/CountryDetail.js","components/CountryTable.js","components/CountryList.js","services/fetchCountries.js","App.js","reportWebVitals.js","index.js"],"names":["CountryDetails","country","setCountry","Popover","open","Boolean","onClose","anchorReference","anchorPosition","left","top","CountryDetail","data","result","get","toString","languages","langList","key","concat","currencies","currencyList","name","symbol","prepareData","flag","flags","length","CardContent","style","display","flexWrap","Object","keys","map","Fragment","Typography","fontSize","fontWeight","marginTop","color","gutterBottom","textDecoration","target","href","border","src","height","width","transformData","datarow","common","independent","area","countryName","currency","headCells","id","extraPadding","label","EnhancedTableHead","props","order","orderBy","onRequestSort","TableHead","TableRow","headCell","TableCell","align","padding","sortDirection","TableSortLabel","active","direction","onClick","property","event","EnhancedTable","React","useState","selected","setSelected","countries","page","setPage","total","setOrder","setOrderBy","setSearch","isLoading","delay","setDelay","justifyContent","TextField","fullWidth","variant","size","InputProps","startAdornment","marginRight","placeholder","onChange","e","clearTimeout","setTimeout","value","Box","sx","Paper","mb","TableContainer","Table","minWidth","rowCount","TableBody","row","index","hover","countryIndex","findIndex","ctry","handleClick","role","tabIndex","component","scope","TablePagination","rowsPerPageOptions","count","rowsPerPage","onPageChange","newPage","position","alignItems","CircularProgress","CountryList","setCountries","setTotal","search","setLoading","error","setError","useEffect","console","log","fetch","then","response","json","catch","message","fetchCountries","Snackbar","anchorOrigin","vertical","horizontal","action","App","textAlign","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7501170a.chunk.js","sourcesContent":["import React from 'react';\r\nimport get from 'lodash/get';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport { CardContent, Typography } from '@material-ui/core';\r\n\r\nexport default function CountryDetails({ country, setCountry }) {\r\n    return (\r\n        <Popover\r\n            open={Boolean(country)}\r\n            onClose={() => setCountry(-1)}\r\n            anchorReference=\"anchorPosition\"\r\n            anchorPosition={{\r\n                left: 700,\r\n                top: 100\r\n            }}>\r\n            <CountryDetail country={country} />\r\n        </Popover>\r\n    )\r\n};\r\n\r\nfunction CountryDetail({ country = {} }) {\r\n    const data = prepareData(country);\r\n    const flag = data.flags.length ? data.flags[0] : '';\r\n    return (\r\n        <CardContent style={{ display: 'flex', flexWrap: 'wrap' }}>\r\n            <div>\r\n                {Object.keys(data).map((key) => key !== 'flags' && (\r\n                    <React.Fragment key={key}>\r\n                        <Typography style={{ fontSize: 18, fontWeight: 'bold', marginTop: 10 }} color=\"text.secondary\" gutterBottom>\r\n                            {key}\r\n                        </Typography>\r\n                        <Typography style={{ marginTop: -5 }}>\r\n                            {data[key]} &nbsp;&nbsp;{key === 'Latitute and Longitude' && <a style={{ textDecoration: 'none' }} target='_blank' href={`https://www.google.com/maps/place/46%C2%B000'00.0%22N+2%C2%B000'00.0%22E/@${data[key]},6z/`}>View on Map</a>}\r\n                        </Typography>\r\n                    </React.Fragment>\r\n                )\r\n                )}\r\n            </div>\r\n            <div>\r\n                <img style={{ border: '1px solid grey' }} src={flag} height={150} width={300} />\r\n            </div>\r\n        </CardContent>\r\n    );\r\n}\r\n\r\nfunction prepareData(country) {\r\n    const result = {};\r\n    result['Common Name'] = get(country, 'name.common', 'NA');\r\n    result['Offical Name'] = get(country, 'name.official', 'NA');\r\n    result['capital(s)'] = get(country, 'capital', []).toString();\r\n    const languages = get(country, 'languages', {});\r\n    let langList = '';\r\n    for (var key in languages) {\r\n        langList = langList.concat(languages[key] + ', ');\r\n    }\r\n    result['Language(s)'] = langList;\r\n    result['code'] = get(country, 'cca2', 'NA');\r\n    result['Is Independent'] = get(country, 'independent') ? 'Yes' : 'No';\r\n    result['Is UN Member'] = get(country, 'unMember') ? 'Yes' : 'No';\r\n    const currencies = get(country, 'currencies', {});\r\n    let currencyList = '';\r\n    for (var key in currencies) {\r\n        const { name = '', symbol = '' } = currencies[key];\r\n        currencyList = currencyList.concat(`${name} (${symbol})`);\r\n    }\r\n    result['Currencies'] = currencyList;\r\n    result['region'] = get(country, 'region', 'NA');\r\n    result['Latitute and Longitude'] = get(country, 'latlng', []).toString();\r\n    result['area in Sqare km'] = get(country, 'area', 0);\r\n    result['flags'] = get(country, 'flags', []);\r\n    return result;\r\n}","import React, { useState } from 'react';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport CountryDetails from './CountryDetail';\r\nimport Box from '@material-ui/core/Box';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport SearchIcon from '@material-ui/icons/SearchTwoTone';\r\n\r\nfunction transformData(datarow) {\r\n    const { name: { common = '' }, currencies = {}, independent, area = 0, flags = [] } = datarow;\r\n    const currencyKeys = Object.keys(currencies);\r\n    return {\r\n        countryName: common,\r\n        currency: currencyKeys[0],\r\n        area,\r\n        independent,\r\n        flag: flags.length && flags[0]\r\n    }\r\n}\r\n\r\nconst headCells = [\r\n    {\r\n        id: 'countryName',\r\n        extraPadding: true,\r\n        label: 'Country Name',\r\n    },\r\n    {\r\n        id: 'currency',\r\n        extraPadding: false,\r\n        label: 'Currency',\r\n    },\r\n    {\r\n        id: 'area',\r\n        extraPadding: false,\r\n        label: 'Area',\r\n    },\r\n    {\r\n        id: 'independent',\r\n        extraPadding: false,\r\n        label: 'Status',\r\n    }\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n    const { order, orderBy, onRequestSort } =\r\n        props;\r\n    const createSortHandler = (property) => (event) => {\r\n        onRequestSort(event, property);\r\n    };\r\n\r\n    return (\r\n        <TableHead>\r\n            <TableRow>\r\n                {headCells.map((headCell) => (\r\n                    <TableCell\r\n                        key={headCell.id}\r\n                        align='left'\r\n                        padding={headCell.extraPadding ? '40' : 'normal'}\r\n                        sortDirection={orderBy === headCell.id ? order : false}\r\n                    >\r\n                        <TableSortLabel\r\n                            style={{ fontWeight: 'bold' }}\r\n                            active={orderBy === headCell.id}\r\n                            direction={orderBy === headCell.id ? order : 'asc'}\r\n                            onClick={createSortHandler(headCell.id)}\r\n                        >\r\n                            {headCell.label}\r\n                        </TableSortLabel>\r\n                    </TableCell>\r\n                ))}\r\n                <TableCell\r\n                    style={{ fontWeight: 'bold' }}\r\n                    key='flag'\r\n                    align='left'\r\n                    padding='normal'\r\n                >\r\n                    Flag\r\n                </TableCell>\r\n            </TableRow>\r\n        </TableHead>\r\n    );\r\n}\r\n\r\nexport default function EnhancedTable(props) {\r\n    const [selected, setSelected] = React.useState();\r\n    const { countries = [], page, setPage, total, order, setOrder, orderBy, setOrderBy, setSearch, isLoading } = props;\r\n    const [delay, setDelay] = useState();\r\n    \r\n    const handleRequestSort = (event, property) => {\r\n        const isAsc = orderBy === property && order === 'asc';\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(property);\r\n    };\r\n\r\n    const handleClick = (event, countryName) => {\r\n        const countryIndex = countries.findIndex(ctry => ctry.name.common === countryName);\r\n        setSelected(countryIndex);\r\n    };\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const changeSearch = (e) => {\r\n        if (delay) {\r\n            clearTimeout(delay);\r\n        }\r\n        setDelay(setTimeout(() => {\r\n            setSearch(e.target.value);\r\n            setPage(0);\r\n        }, 500));\r\n    }\r\n\r\n    return (\r\n        <div style={{ display: 'flex', justifyContent: 'center', flexWrap: 'wrap' }}>\r\n            <TextField style={{ width: '80%' }} fullWidth variant=\"outlined\" size=\"small\" InputProps={{\r\n                startAdornment: <SearchIcon style={{ marginRight: '10px' }} />\r\n            }}\r\n                placeholder=\"Search a Country by Name\"\r\n                onChange={changeSearch} />\r\n            <Box sx={{ width: '80%' }} style={{ marginTop: 20 }}>\r\n                <Paper sx={{ width: '100%', mb: 2 }}>\r\n                    <TableContainer>\r\n                        <Table\r\n                            sx={{ minWidth: 750 }}\r\n                            aria-labelledby=\"tableTitle\"\r\n                            size='medium'\r\n                        >\r\n                            <EnhancedTableHead\r\n                                order={order}\r\n                                orderBy={orderBy}\r\n                                onRequestSort={handleRequestSort}\r\n                                rowCount={countries.length}\r\n                            />\r\n                            {<TableBody>\r\n                                {countries.map(transformData)\r\n                                    .map((row, index) => {\r\n\r\n                                        return (\r\n                                            <TableRow\r\n                                                hover\r\n                                                onClick={(event) => handleClick(event, row.countryName)}\r\n                                                role=\"checkbox\"\r\n                                                aria-checked={index === selected}\r\n                                                tabIndex={-1}\r\n                                                key={row.countryName}\r\n                                                selected={index === selected}\r\n                                            >\r\n                                                <TableCell\r\n                                                    component=\"th\"\r\n                                                    scope=\"row\"\r\n                                                    padding=\"40\"\r\n                                                >\r\n                                                    {row.countryName || 'None'}\r\n                                                </TableCell>\r\n                                                <TableCell align=\"left\">{row.currency || 'None'}</TableCell>\r\n                                                <TableCell align=\"left\">{row.area || 0}</TableCell>\r\n                                                <TableCell align=\"left\">{row.independent ? 'Independent' : 'Dependent'}</TableCell>\r\n                                                <TableCell align=\"left\">{row.flag && <img src={row.flag} height={20} width={40} />}</TableCell>\r\n                                            </TableRow>\r\n                                        );\r\n                                    })}\r\n                            </TableBody>}\r\n                        </Table>\r\n                    </TableContainer>\r\n                    <TablePagination\r\n                        rowsPerPageOptions={[-1]}\r\n                        component=\"div\"\r\n                        count={total}\r\n                        page={page}\r\n                        rowsPerPage={10}\r\n                        onPageChange={handleChangePage}\r\n                    />\r\n                    <CountryDetails country={selected !== -1 ? countries[selected] : ''} setCountry={setSelected} />\r\n\r\n                </Paper>\r\n            </Box>\r\n            {isLoading && <div style={{ position: 'absolute', height: '80vh', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n                <CircularProgress />\r\n            </div>}\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport CountryTable from './CountryTable';\r\nimport { fetchCountries } from '../services/fetchCountries';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nexport default function CountryList() {\r\n    const [countries, setCountries] = useState();\r\n    const [page, setPage] = useState(0);\r\n    const [total, setTotal] = useState(0);\r\n    const [order, setOrder] = useState('asc');\r\n    const [orderBy, setOrderBy] = useState('countryName');\r\n    const [search, setSearch] = useState();\r\n    const [isLoading, setLoading] = useState(false);\r\n    const [error, setError] = useState();\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        fetchCountries(search, page, order, orderBy).then(result => {\r\n            // console.log('result is', result);\r\n            if (result) {\r\n                const { total = 0, data = [], message } = result;\r\n                setTotal(total);\r\n                setCountries(data);\r\n                setLoading(false);\r\n                if (message) {\r\n                    setError(message);\r\n                }\r\n            }\r\n        });\r\n    }, [page, search, order, orderBy]);\r\n    return (\r\n        <>\r\n            <CountryTable\r\n                countries={countries}\r\n                page={page}\r\n                setPage={setPage}\r\n                total={total}\r\n                order={order}\r\n                setOrder={setOrder}\r\n                orderBy={orderBy}\r\n                setOrderBy={setOrderBy}\r\n                setSearch={setSearch}\r\n                isLoading={isLoading} />\r\n            <Snackbar\r\n                message={<div style={{ color: 'red'}}>{error}</div>}\r\n                open={Boolean(error)}\r\n                onClose={() => setError('')}\r\n                anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n                action={<CloseIcon />}\r\n            />\r\n        </>\r\n    );\r\n}\r\n","export function fetchCountries(search, page, order, orderBy) {\r\n    console.log('ordering', order, orderBy);\r\n    return fetch(`/countries?search=${search || ''}&page=${page}&order=${order || ''}&orderBy=${orderBy || ''}`).then(response => {\r\n        const data = response.json();\r\n        return data;\r\n    }).catch(error => {\r\n        return { message: 'There was an error fetching data' };   \r\n    });\r\n}\r\n","import CountryList from './components/CountryList';\n\nfunction App() {\n  return (\n    <div style={{ textAlign: 'center' }}>\n      <h3>\n        List of Countries\n      </h3>\n      <CountryList />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}